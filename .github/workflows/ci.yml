name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
  schedule:
    - cron: "0 6 * * 1-5"
  workflow_dispatch:

jobs:
  check_format:
    name: Check codebase format with clang-format
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run clang-format dry-run
        shell: bash
        run: |
          clang-format --version
          find include/ tests/ examples/ -iname "*.hxx" -o -iname "*.cxx" | xargs clang-format -n -Werror

  build:
    name: Build on ${{ matrix.os }} in ${{ matrix.build_type }} unstable ${{ matrix.unstable }}  shm ${{ matrix.shm }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        shm: ["FALSE", "TRUE"]
        unstable: ["FALSE", "TRUE"]
        build_type: [Debug, Release]
        exclude:
          - os: windows-latest
            build_type: Debug
            shm: "TRUE"

    steps:
      - name: Clone this repository
        uses: actions/checkout@v4

      - name: install zenoh-cpp and its dependencies
        shell: bash
        run: |
          ./scripts/install_from_git.sh ~/local ${{ matrix.unstable }} ${{ matrix.shm }} ON ${{ matrix.build_type }}

      - name: make examples
        shell: bash
        run: |
          cd build
          cmake --build . --target examples --config ${{ matrix.build_type }}

      - name: make stand-alone examples
        shell: bash
        run: |
          ./scripts/build_standalone_examples.sh ~/local

      - name: make tests
        shell: bash
        run: |
          cd build
          cmake --build . --target tests --config ${{ matrix.build_type }}

      - name: run tests
        shell: bash
        run: |
          cd build
          # On ubuntu we need to modify memlock limit to allow tests to run
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            sudo prlimit --memlock=unlimited --pid=$$
          fi
          # On macOS, sudo is required to run tests due to LAN access permissions
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            sudo ctest -C ${{ matrix.build_type }} --output-on-failure
          else
            ctest -C ${{ matrix.build_type }} --output-on-failure
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: zenoh-cpp-${{ matrix.os }}-${{ matrix.build_type }}
          # Directory containing files to upload
          path: |
            target/release/examples

  markdown_lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: DavidAnson/markdownlint-cli2-action@v18
        with:
          config: '.markdownlint.yaml'
          globs: '**/README.md'

  # NOTE: In GitHub repository settings, the "Require status checks to pass
  # before merging" branch protection rule ensures that commits are only merged
  # from branches where specific status checks have passed. These checks are
  # specified manually as a list of workflow job names. Thus we use this extra
  # job to signal whether all CI checks have passed.
  ci:
    name: CI status checks
    runs-on: ubuntu-latest
    needs: [build, markdown_lint]
    if: always()
    steps:
      - name: Check whether all jobs pass
        run: echo '${{ toJson(needs) }}' | jq -e 'all(.result == "success")'
